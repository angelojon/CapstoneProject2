@model _1FinalCapstone.Controllers.HomeController.PaginatedList<_1FinalCapstone.Models.CheckoutTable>

@{
    ViewBag.Title = "ListofOrders";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<br />
<br />
<h2>List of Accepted Orders </h2>
<br />
<style>
    table.table thead th {
        width: 10%; /* Adjust the width as needed */
        white-space: nowrap; /* Prevent text from wrapping */
        overflow: hidden; /* Hide overflowing text */
        text-overflow: ellipsis; /* Add ellipsis (...) for long titles */
    }

    table#yourTableId {
        font-weight: normal;
    }

    .pagination a {
        padding: 5px 10px; /* Adjust the padding as needed */
        margin: 0 2px; /* Adjust the margin as needed */
        border: 1px solid #007bff; /* Border color for the links */
        border-radius: 5px; /* Rounded corners */
        color: #007bff; /* Text color for the links */
        text-decoration: none;
    }

    /* Style for the current page link */
    .pagination span {
        padding: 5px 10px; /* Adjust the padding as needed */
        margin: 0 2px; /* Adjust the margin as needed */
        background-color: #007bff; /* Background color for the current page link */
        color: #fff; /* Text color for the current page link */
        border-radius: 5px; /* Rounded corners */
    }
</style>
<div class="d-flex justify-content-end mb-2">
    <!-- Add a space here -->
    &nbsp;&nbsp;&nbsp;
    <!-- Button to redirect to Accepted Orders with increased margin -->
    @Html.ActionLink("Go to Accepted Orders", "AcceptedOrders", null, new { @class = "btn btn-primary btn-margin" })
    &nbsp;&nbsp;&nbsp;

    @Html.ActionLink("Go to Completed Orders", "ListofCompletedOrders", "CompletedOrders", null, new { @class = "btn btn-primary btn-margin" })
    &nbsp;&nbsp;&nbsp;

    @Html.ActionLink("Go to Cancelled Orders", "CancelledOrders", null, new { @class = "btn btn-primary btn-margin" })
</div>
<br />
<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="thead-dark">
            <tr>
                <th>Order Name</th>
                <th>Order Quantity</th>
                <th>Order Price</th>
                <th>Total Price</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Email</th>
                <th>Address</th>
                <th>Contact Number</th>
                <th>Payment Mode</th>
                <th>Customer Account Number</th>
                <th>Order Status</th>
                <th>Checkout Date</th>
                <th>Accepted Date</th>
      
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.OrderName)</td>
                    <td>@Html.DisplayFor(modelItem => item.OrderQuantity)</td>
                    <td>
                        ₱@string.Format("{0:n0}", item.OrderPrice).00
                    </td>
                    <td>
                        ₱@string.Format("{0:n0}", item.TotalPrice).00
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>@Html.DisplayFor(modelItem => item.Address)</td>
                    <td>@Html.DisplayFor(modelItem => item.ContactNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.PaymentMode)</td>
                    <td>@Html.DisplayFor(modelItem => item.CustomerAccountNumber)</td>
                    <td>@Html.DisplayFor(modelItem => item.OrderStatus)</td>
                    <td>@Html.DisplayFor(modelItem => item.CheckoutDate)</td>
                    <td>@Html.DisplayFor(modelItem => item.AcceptedDate)</td>
                  
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="pagination">
    @if (Model.TotalPages > 1)
    {
        if (Model.PageIndex > 1)
        {
            @*<a href="?page=1&pageSize=@Model.PageSize">First</a>
                <a href="?page=@(Model.PageIndex - 1)&pageSize=@Model.PageSize">Previous</a>*@
        }
        for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.PageIndex)
            {
                <span>@i</span>
            }
            else
            {
                <a href="?page=@i&pageSize=@Model.PageSize">@i</a>
            }
        }
        if (Model.PageIndex < Model.TotalPages)
        {
            @*<a href="?page=@(Model.PageIndex + 1)&pageSize=@Model.PageSize">Next</a>
                <a href="?page=@Model.TotalPages&pageSize=@Model.PageSize">Last</a>*@
        }
    }
</div>

<script>
    function confirmPayment() {
        var confirmation = confirm("Please make sure the product is received by the customer before clicking OK");
        return confirmation;
    }
</script>