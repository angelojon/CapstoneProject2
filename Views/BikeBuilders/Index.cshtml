@model  IEnumerable<_1FinalCapstone.Models.BikeBuilder>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}


<style>
    .btn-margin {
        margin-left: 10px;
    }

    table.table thead th {
        width: 10%; /* Adjust the width as needed */
        white-space: nowrap; /* Prevent text from wrapping */
        overflow: hidden; /* Hide overflowing text */
        text-overflow: ellipsis; /* Add ellipsis (...) for long titles */
    }
</style>

<br />
<h2 class="text-center mb-4"><b> Step Bike Builder</b></h2>
<div class="d-flex justify-content-end mb-2">

    <!-- Button to redirect to Index2 with increased margin -->
    @Html.ActionLink("Go to Bike Final Creation", "Index2", null, new { @class = "btn btn-success btn-margin" })



</div>
<div class="table-responsive">
    <div class="mb-2">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by Name" />
    </div>
    <div class="mb-2" style="background-color: #f7f7f7; border: 1px solid #ccc; padding: 10px; border-radius: 5px;">
        <p style="font-weight: bold;">Choose Category to get Started</p>
        <select id="categoryDropdown">
            <option value="" selected>All</option>
            <option value="Step 1">Step 1</option>
            <option value="Step 2">Step 2</option>
            <option value="Step 3">Step 3</option>
            <option value="Step 4">Step 4</option>
            <option value="Step 5">Step 5</option>

        </select>
    </div>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Step Title</th>
                <th>Builder Title 1</th>
                <th>Builder Description 1</th>
                <th>Price</th>
                <th>Image</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>


            @foreach (var item in Model)
            {
                <tr class="product-row">
                    <td>
                        @Html.DisplayFor(modelItem => item.StepTitle)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BuilderTitle1)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BuilderDescription1)
                    </td>
                    <td>
                        ₱@string.Format("{0:n0}", item.Bprice1).00
                    </td>
                    <td>
                        <img src="data:image/png;base64,@item.Budimage1" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
                    </td>

                    @*<td>
                            <img src="data:image/png;base64,@item.Budimage2" class="img-thumbnail" style="max-width: 200px; max-height: 200px;" />
                        </td>*@



                    <td>
                        <a href="@Url.Action("Edit", new { id = item.BuilderId })" class="btn btn-primary btn-sm">
                            <i class="far fa-edit fa-lg"></i> <span class="ml-2">Edit</span>
                        </a>



                    </td>


                </tr>
            }
    </table>
</div>

@section scripts {


    <script>
            $(document).ready(function () {
                // Function to filter the table rows based on the selected category
                $("#categoryDropdown").change(function () {
                    var selectedCategory = $(this).val();

                    // Store the selected category in local storage
                    localStorage.setItem("selectedCategory", selectedCategory);

                    // Hide all rows
                    $(".product-row").hide();

                    if (selectedCategory === "All") {
                        $(".product-row").show();
                    } else {
                        // Find the correct column index for "Step Title" - adjust if necessary
                        var columnIndex = findStepTitleColumnIndex();
                        if (columnIndex >= 0) {
                            $(".product-row:has(td:eq(" + columnIndex + "):contains('" + selectedCategory + "'))").show();
                        }
                    }
                });

                // Function to filter the table rows based on the search input
                $("#searchInput").on("keyup", function () {
                    var value = $(this).val().toLowerCase();
                    $(".product-row").filter(function () {
                        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                    });
                });

                // Function to confirm archiving an item

                // Retrieve and set the selected category from local storage
                var selectedCategory = localStorage.getItem("selectedCategory");
                if (selectedCategory) {
                    $("#categoryDropdown").val(selectedCategory);
                    // Trigger the change event to apply the filter
                    $("#categoryDropdown").change();
                }

                // Helper function to find the column index for "Step Title"
                function findStepTitleColumnIndex() {
                    var stepTitle = "Step Title"; // Update with the actual text in the table header
                    var headers = $("thead th");
                    for (var i = 0; i < headers.length; i++) {
                        if ($(headers[i]).text().trim() === stepTitle) {
                            return i;
                        }
                    }
                    return -1; // Step Title not found
                }
            });
    </script>

    <script>
            $(document).ready(function () {
                // When the search input changes, filter the table rows.
                $('#searchInput').on('input', function () {
                    var searchText = $(this).val().toLowerCase();
                    $('.table tbody tr').each(function () {
                        var rowText = $(this).text().toLowerCase();
                        $(this).toggle(rowText.indexOf(searchText) > -1);
                    });
                });
            });
            function confirmArchive(button) {
                if (confirm("Are you sure you want to archive this item?")) {
                    // If the user confirms, submit the form
                    button.closest("form").submit();
                } else {
                    // If the user cancels, do nothing
                }
            }
    </script>
}