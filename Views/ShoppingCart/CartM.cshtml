@model _1FinalCapstone.Models.Merge
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>
<style>

    body, html {
        margin: 0;
        padding: 0;
        font-family: 'Oswald', sans-serif;
        overflow-x: hidden; /* To prevent horizontal scrollbars */
    }

    a {
        text-decoration: none;
        color: black;
    }

    p {
        color: black;
    }


    /* Make the container full-width */
    .container {
        width: 100%;
    }

    /* Remove padding from columns */
    .col-md-6 {
        padding: 0;
    }

    /* Adjust the table width */
    table {
        width: 100%;
    }

    .hidden {
        display: none;
    }


    .form-control {
        width: 50px !important;
        height: 30px;
        font-family: "Inter", sans-serif;
    }

        .form-control:active, .form-control:focus {
            outline: none;
            -webkit-box-shadow: none;
            box-shadow: none;
            border-color: #3b5d50;
            -webkit-box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);
            box-shadow: 0 1px 4px 0 rgba(0, 0, 0, 0.2);
        }

        .form-control::-webkit-input-placeholder {
            font-size: 14px;
        }

        .form-control::-moz-placeholder {
            font-size: 14px;
        }

        .form-control:-ms-input-placeholder {
            font-size: 14px;
        }

        .form-control:-moz-placeholder {
            font-size: 14px;
        }

    .service {
        line-height: 1.5;
    }

        .service .service-icon {
            border-radius: 10px;
            -webkit-box-flex: 0;
            -ms-flex: 0 0 50px;
            flex: 0 0 50px;
            height: 50px;
            line-height: 50px;
            text-align: center;
            background: #3b5d50;
            margin-right: 20px;
            color: #ffffff;
        }

    textarea {
        height: auto !important;
    }

    .site-blocks-table {
        overflow: auto;
    }

        .site-blocks-table .product-thumbnail {
            width: 200px;
        }

        .site-blocks-table .btn {
            padding: 2px 10px;
        }

        .site-blocks-table thead th {
            padding: 30px;
            text-align: center;
            border-width: 0px !important;
            vertical-align: middle;
            color: rgba(0, 0, 0, 0.8);
            font-size: 18px;
        }

        .site-blocks-table td {
            padding: 20px;
            text-align: center;
            vertical-align: middle;
            color: rgba(0, 0, 0, 0.8);
        }

        .site-blocks-table tbody tr:first-child td {
            border-top: 1px solid #3b5d50 !important;
        }

        .site-blocks-table .btn {
            background: none !important;
            color: #000000;
            border: none;
            height: auto !important;
        }

    .site-block-order-table th {
        border-top: none !important;
        border-bottom-width: 1px !important;
    }

    .site-block-order-table td, .site-block-order-table th {
        color: #000000;
    }

    .couponcode-wrap input {
        border-radius: 10px !important;
    }

    .text-primary {
        color: #3b5d50 !important;
    }

    .custom-button {
        background-color: #007bff; /* Blue background color */
        color: #fff; /* White text color */
        padding: 10px 20px; /* Padding around the text */
        border: none; /* Remove the default button border */
        border-radius: 4px; /* Rounded corners */
        cursor: pointer; /* Show a hand cursor on hover */
    }

        .custom-button:hover {
            background-color: #0056b3; /* Darker blue on hover */
        }
    /* Add this CSS to style the disabled button */
    #checkoutSelectedItems:disabled {
        opacity: 0.6; /* Reduce the opacity to make it look dimmed */
        cursor: not-allowed; /* Change the cursor to 'not-allowed' */
    }
</style>

<body>
    <div class="container-fluid">

        <div class="container mt-5 text-center">
            <h2 class="mb-4">My Cart</h2>

            <div class="d-flex justify-content-end mb-2">
                <a href="@Url.Action("Products", "Home")" class="btn btn-primary mx-2">Continue Shopping</a>
                <a href="~/Checkout/CustomerPlacedOrder" class="btn btn-primary mx-2">Orders</a>

            </div>

            @if (Model.Cart.Any() || Model.CartBuilder.Any())
            {
                <div class="row">
                    @if (Model.Cart.Any())
                    {
                        <div class="untree_co-section before-footer-section">
                            <div class="container">
                                <div class="row mb-5">
                                    <div class="site-blocks-table">
                                        <table class="table">
                                            <thead>
                                                <tr>
                                                    <!-- Add a checkbox column for selection -->
                                                    <th><input type="checkbox" class="select-all-checkbox"></th>
                                                    <!-- ... Other headers ... -->
                                                    <th class="product-thumbnail">Image</th>
                                                    <th class="product-name">Product</th>
                                                    <th class="product-price">Price</th>
                                                    <th class="product-quantity">Quantity</th>
                                                    <th class="product-total">Total</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>

                                                @foreach (var cartItem in Model.Cart)
                                                {
                                                    <tr>
                                                        <!-- Add a checkbox for each item -->
                                                        <td>

                                                            <input type="checkbox" name="selectedItems" class="cart-item-checkbox" data-cart-id="@cartItem.CartId" />

                                                        </td>

                                                        <td class="hidden">@cartItem.CartId</td>
                                                        <td class="hidden">@cartItem.ProductId</td>
                                               

                                                        <!-- Add this column to display the ItemQuantity -->



                                                        <td class="product-thumbnail">
                                                            @if (cartItem.CartImage != null && cartItem.CartImage.Length > 0)
                                                            {
                                                                string imageBase64 = Convert.ToBase64String(cartItem.CartImage);
                                                                <img src="data:image/png;base64,@imageBase64" alt="@cartItem.ItemName" class="img-fluid" style="max-height: 100px;" />
                                                            }
                                                        </td>

                                                        <td class="product-name">
                                                            <h2 class="h5 text-black">@cartItem.ItemName</h2>
                                                        </td>

                                                        <td>₱@string.Format("{0:n0}", cartItem.ItemPrice).00</td>

                                                        <td class="product-quantity">
                                                            <div class="col-md-6 mb-3 mb-md-0">
                                                                <form method="post" action="@Url.Action("UpdateCartItemQuantity", "Home")">
                                                                    <input type="hidden" name="cartItemId" value="@cartItem.CartId" />
                                                                    <div class="input-group">

                                                                        <div class="input-group-append">
                                                                            <button class="btn btn-outline-black decrease-quantity"
                                                                                    type="button"
                                                                                    data-cart-item-id="@cartItem.CartId"
                                                                                    data-product-id="@cartItem.ProductId"
                                                                                    onclick="updateCartItemQuantity(@cartItem.CartId, @cartItem.ProductId, -1)">
                                                                                &minus;
                                                                            </button>
                                                                        </div>

                                                                        <input name="quantity" value="@cartItem.Quantity" class="form-control" readonly />


                                                                        <div class="input-group-append">
                                                                            <button class="btn btn-outline-black increase-quantity"
                                                                                    type="button"
                                                                                    data-cart-item-id="@cartItem.CartId"
                                                                                    data-product-id="@cartItem.ProductId"
                                                                                    onclick="updateCartItemQuantity(@cartItem.CartId, @cartItem.ProductId, 1)">
                                                                                &plus;
                                                                            </button>
                                                                        </div>


                                                                    </div>
                                                                    @if (!ViewData.ModelState.IsValid)
                                                                    {
                                                                        <span class="text-danger">Quantity exceeds available stock.</span>
                                                                    }
                                                                </form>
                                                            </div>
                                                        </td>

                                                        <td class="product-total">₱@string.Format("{0:n0}", cartItem.Subtotal).00</td>

                                                        <td class="product-price" data-price="@cartItem.ItemPrice" style="font-size: 0;">@string.Format("{0:n0}", cartItem.ItemPrice).00</td>


                                                        <td>
                                                            <div style="display: inline-block;">
                                                                <form method="post" action="@Url.Action("DeleteCartItem", "Home")">
                                                                    <input type="hidden" name="cartItemId" value="@cartItem.CartId" />
                                                                    <button type="submit" class="btn btn-primary btn-sm ml-2">
                                                                        <i class="fas fa-trash"></i> <!-- Font Awesome trash icon -->
                                                                    </button>
                                                                </form>
                                                            </div>
                                                        </td>

                                                    </tr>


                                                }
                                            </tbody>
                                        </table>

                                        <button type="button" id="checkoutSelectedItems" class="custom-button" disabled>Checkout Selected Items</button>
                                        <!-- Add a Checkout All button here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                    <div class="row">
                        <div class="col-md-6">
                            <div class="row mb-5">





                            </div>

                        </div>

                    </div>
                </div>
                <br />
                <br />
            }
            else
            {
                <div class="alert alert-info mt-4" role="alert">
                    No items in the merged cart.
                </div>
            }
        </div>
    </div>
</body>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    document.getElementById("checkoutSelectedItems").addEventListener("click", function () {
        var selectedCartIds = [];
        var checkboxes = document.querySelectorAll('input[name="selectedItems"]:checked');

        checkboxes.forEach(function (checkbox) {
            selectedCartIds.push(checkbox.getAttribute("data-cart-id"));
        });

        // Redirect to the Checkout2 view with the selectedCartIds
        window.location.href = "/Checkout/Checkout2?selectedCartIds=" + selectedCartIds.join(",");
    });

</script>

<!-- ... (other HTML code) -->

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).ready(function () {

        // Custom function to add commas for thousands
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
        // Handle increase button click
        $(".increase-quantity").click(function () {
            var cartItemId = $(this).data("cart-item-id");
            var quantityElement = $(this).closest(".input-group").find("input[name='quantity']");
            var currentQuantity = parseInt(quantityElement.val());

            // Update quantity in the UI
            quantityElement.val(currentQuantity + 1);

            // Calculate and update the subtotal in the UI
            var priceElement = $(this).closest("tr").find(".product-price");
            var price = parseFloat(priceElement.data("price"));
            var subtotalElement = $(this).closest("tr").find(".product-total");
            var subtotal = (currentQuantity + 1) * price;

            // Update the subtotal with commas
            subtotalElement.text('₱' + numberWithCommas(subtotal.toFixed(2)));

            // Make an AJAX request to update the server-side data (optional)
            updateCartItemQuantity(cartItemId, 1); // Update quantity by 1
        });

        // Handle decrease button click
        $(".decrease-quantity").click(function () {
            var cartItemId = $(this).data("cart-item-id");
            var quantityElement = $(this).closest(".input-group").find("input[name='quantity']");
            var currentQuantity = parseInt(quantityElement.val());

            if (currentQuantity > 1) {
                // Update quantity in the UI
                quantityElement.val(currentQuantity - 1);

                // Calculate and update the subtotal in the UI
                var priceElement = $(this).closest("tr").find(".product-price");
                var price = parseFloat(priceElement.data("price"));
                var subtotalElement = $(this).closest("tr").find(".product-total");
                var subtotal = (currentQuantity - 1) * price;

                // Update the subtotal with commas
                subtotalElement.text('₱' + numberWithCommas(subtotal.toFixed(2)));

                // Make an AJAX request to update the server-side data (optional)
                updateCartItemQuantity(cartItemId, -1); // Update quantity by -1
            }
        });

        // Custom function to add commas for thousands
        function numberWithCommas(x) {
            return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
    });
</script>



<script>
    function updateCartItemQuantity(cartItemId, productId, change) {
        $.ajax({
            type: "POST",
            url: "/Home/UpdateCartItemQuantity",
            data: {
                cartItemId: cartItemId,
                productId: productId,
                change: change
            },
            success: function (response) {
                if (response.success) {
                    // Update the UI immediately
                    console.log("Script loaded and executed.");
                    var quantityElement = $(".product-quantity input[name='quantity'][data-cart-item-id='" + cartItemId + "']");
                    var subtotalElement = quantityElement.closest("tr").find(".product-subtotal");

                    // Update the quantity in the UI
                    quantityElement.val(response.newQuantity);

                    // Update the subtotal in the UI
                    subtotalElement.text('₱' + response.newSubtotal.toFixed(2));
                } else {
                    // Handle errors or display a message if needed.
                    console.error("Update failed: " + response.message);
                }
            },
            error: function (error) {
                // Handle errors if needed
                console.error(error);
            }
        });
    }


</script>

<script>

    $(document).ready(function () {
        // ... Your existing code ...

        // Initialize an object to store selected cart items
        var selectedItems = {};

        // Function to handle checkbox changes
        $(".cart-item-checkbox").change(function () {
            var cartItemId = $(this).data("cart-item-id");

            if (this.checked) {
                // Add the selected item to the object
                selectedItems[cartItemId] = true;
            } else {
                // Remove the item from the object
                delete selectedItems[cartItemId];
            }
        });

</script>

<script>
    $(document).ready(function () {
        // Function to handle checkbox changes
        function handleCheckboxChange() {
            var selectedCheckboxes = $(".cart-item-checkbox:checked");
            var checkoutButton = $("#checkoutSelectedItems");

            // Enable the button if at least one checkbox is checked
            if (selectedCheckboxes.length > 0) {
                checkoutButton.prop("disabled", false);
            } else {
                // Disable the button if no checkboxes are checked
                checkoutButton.prop("disabled", true);
            }
        }

        // When the "select-all" checkbox is clicked
        $(".select-all-checkbox").click(function () {
            var isChecked = $(this).prop("checked");

            // Set the state of all checkboxes in the same group
            $(".cart-item-checkbox").prop("checked", isChecked);

            // Call the function to handle checkbox changes
            handleCheckboxChange();
        });

        // Handle individual checkbox changes
        $(".cart-item-checkbox").change(function () {
            handleCheckboxChange();
        });

        // Initially, check the state of checkboxes and update the button
        handleCheckboxChange();
    });

</script>
